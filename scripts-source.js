var normal = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";



function applyCharMap(map, text) {
  let out = "";
  for (let c of text.split("")) {
    if (map[c] !== undefined) out += map[c];
    else if (map[c.toLowerCase()] !== undefined) out += map[c.toLowerCase()];
    else out += c;
  }
  return out;
}

function italicCharMapFun(text) {
  return applyCharMap(italicCharMap, text);
}
function boldItalicCharMapFun(text) {
  return applyCharMap(boldItalicCharMap, text);
}

var luni = new Lunicode();
luni.tools.creepify.options.maxHeight = 10;

function crazyWithFlourishOrSymbols(text) {
  if (Math.random() < 0.7) return wrapInSymbols(crazifyText(text), 2);
  else return wrapInFlourish(crazifyText(text), 2);
}
function Change(intext, id) {

  var text = "";

  var intext = intext;
  if (intext.length == 0) return;

  for (i = 0; i < intext.length; i++) {
      var c = intext.charAt(i),
          loc = normal.indexOf(c) +1;
      if( c == ' '){
        text += ' ';
      }else if( !loc ){
        text += c;
      }else{
        text += newtext[id][loc];
      }

  }
  return text;
}


/* eslint-disable */
const boldItalicCharMap = { "0": "0", "1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "7": "7", "8": "8", "9": "9", "a": "ùôñ", "b": "ùôó", "c": "ùôò", "d": "ùôô", "e": "ùôö", "f": "ùôõ", "g": "ùôú", "h": "ùôù", "i": "ùôû", "j": "ùôü", "k": "ùô†", "l": "ùô°", "m": "ùô¢", "n": "ùô£", "o": "ùô§", "p": "ùô•", "q": "ùô¶", "r": "ùôß", "s": "ùô®", "t": "ùô©", "u": "ùô™", "v": "ùô´", "w": "ùô¨", "x": "ùô≠", "y": "ùôÆ", "z": "ùôØ", "A": "ùòº", "B": "ùòΩ", "C": "ùòæ", "D": "ùòø", "E": "ùôÄ", "F": "ùôÅ", "G": "ùôÇ", "H": "ùôÉ", "I": "ùôÑ", "J": "ùôÖ", "K": "ùôÜ", "L": "ùôá", "M": "ùôà", "N": "ùôâ", "O": "ùôä", "P": "ùôã", "Q": "ùôå", "R": "ùôç", "S": "ùôé", "T": "ùôè", "U": "ùôê", "V": "ùôë", "W": "ùôí", "X": "ùôì", "Y": "ùôî", "Z": "ùôï" };
const boldCharMap = { "0": "ùüé", "1": "ùüè", "2": "ùüê", "3": "ùüë", "4": "ùüí", "5": "ùüì", "6": "ùüî", "7": "ùüï", "8": "ùüñ", "9": "ùüó", "a": "ùêö", "b": "ùêõ", "c": "ùêú", "d": "ùêù", "e": "ùêû", "f": "ùêü", "g": "ùê†", "h": "ùê°", "i": "ùê¢", "j": "ùê£", "k": "ùê§", "l": "ùê•", "m": "ùê¶", "n": "ùêß", "o": "ùê®", "p": "ùê©", "q": "ùê™", "r": "ùê´", "s": "ùê¨", "t": "ùê≠", "u": "ùêÆ", "v": "ùêØ", "w": "ùê∞", "x": "ùê±", "y": "ùê≤", "z": "ùê≥", "A": "ùêÄ", "B": "ùêÅ", "C": "ùêÇ", "D": "ùêÉ", "E": "ùêÑ", "F": "ùêÖ", "G": "ùêÜ", "H": "ùêá", "I": "ùêà", "J": "ùêâ", "K": "ùêä", "L": "ùêã", "M": "ùêå", "N": "ùêç", "O": "ùêé", "P": "ùêè", "Q": "ùêê", "R": "ùêë", "S": "ùêí", "T": "ùêì", "U": "ùêî", "V": "ùêï", "W": "ùêñ", "X": "ùêó", "Y": "ùêò", "Z": "ùêô" };
const italicCharMap = { "0": "0", "1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "7": "7", "8": "8", "9": "9", "a": "ùò¢", "b": "ùò£", "c": "ùò§", "d": "ùò•", "e": "ùò¶", "f": "ùòß", "g": "ùò®", "h": "ùò©", "i": "ùò™", "j": "ùò´", "k": "ùò¨", "l": "ùò≠", "m": "ùòÆ", "n": "ùòØ", "o": "ùò∞", "p": "ùò±", "q": "ùò≤", "r": "ùò≥", "s": "ùò¥", "t": "ùòµ", "u": "ùò∂", "v": "ùò∑", "w": "ùò∏", "x": "ùòπ", "y": "ùò∫", "z": "ùòª", "A": "ùòà", "B": "ùòâ", "C": "ùòä", "D": "ùòã", "E": "ùòå", "F": "ùòç", "G": "ùòé", "H": "ùòè", "I": "ùòê", "J": "ùòë", "K": "ùòí", "L": "ùòì", "M": "ùòî", "N": "ùòï", "O": "ùòñ", "P": "ùòó", "Q": "ùòò", "R": "ùòô", "S": "ùòö", "T": "ùòõ", "U": "ùòú", "V": "ùòù", "W": "ùòû", "X": "ùòü", "Y": "ùò†", "Z": "ùò°" };
// Lunicode.js
// from lunicode.com
// on GitHub: https://github.com/combatwombat/Lunicode.js
// Copyright ¬© 2012 Robert Gerlach - robsite.net
function Lunicode() { this.tools = { flip: { init: function () { for (i in this.map) this.map[this.map[i]] = i }, encode: function (i) { for (var r, t = [], o = 0, h = i.length; h > o; o++)r = i.charAt(o), o > 0 && ("Ã§" == r || "Ãó" == r || "Ãñ" == r || "ÃÆ" == r) ? (r = this.map[i.charAt(o - 1) + r], t.pop()) : (r = this.map[r], "undefined" == typeof r && (r = i.charAt(o))), t.push(r); return t.reverse().join("") }, decode: function (i) { for (var r, t = [], o = 0, h = i.length; h > o; o++)r = i.charAt(o), o > 0 && ("Ã§" == r || "Ãó" == r || "Ãñ" == r || "ÃÆ" == r) ? (r = this.map[i.charAt(o - 1) + r], t.pop()) : (r = this.map[r], "undefined" == typeof r && (r = i.charAt(o))), t.push(r); return t.reverse().join("") }, map: { a: "…ê", b: "q", c: "…î", d: "p", e: "«ù", f: "…ü", g: "…ì", h: "…•", i: "ƒ±", j: "…æ", k: " û", l: "l", m: "…Ø", n: "u", r: "…π", t: " á", v: " å", w: " ç", y: " é", A: "‚àÄ", B: "·ô†", C: "∆Ü", D: "·ó°", E: "∆é", F: "‚Ñ≤", G: "‚ÖÅ", J: "≈ø", K: "‚ãä", L: "À•", M: "W", P: "‘Ä", Q: "Œå", R: "·¥ö", T: "‚ä•", U: "‚à©", V: "Œõ", Y: "‚ÖÑ", 1: "‚áÇ", 2: "·ÑÖ", 3: "∆ê", 4: "„Ñ£", 5: "ﬁé", 6: "9", 7: "„Ñ•", "&": "‚Öã", ".": "Àô", '"': "‚Äû", ";": "ÿõ", "[": "]", "(": ")", "{": "}", "?": "¬ø", "!": "¬°", "'": ",", "<": ">", "‚Äæ": "_", "¬Ø": "_", "‚Äø": "‚ÅÄ", "‚ÅÖ": "‚ÅÜ", "‚à¥": "‚àµ", "\r": "\n", "√ü": "·ô†", "Ãà": "Ã§", "√§": "…êÃ§", "√∂": "oÃ§", "√º": "nÃ§", "√Ñ": "‚àÄÃ§", "√ñ": "OÃ§", "√ú": "‚à©Ã§", "¬¥": " Ãó", "√©": "«ùÃó", "√°": "…êÃó", "√≥": "oÃó", "√∫": "nÃó", "√â": "∆éÃó", "√Å": "‚àÄÃó", "√ì": "OÃó", "√ö": "‚à©Ãó", "`": " Ãñ", "√®": "«ùÃñ", "√†": "…êÃñ", "√≤": "oÃñ", "√π": "nÃñ", "√à": "∆éÃñ", "√Ä": "‚àÄÃñ", "√í": "OÃñ", "√ô": "‚à©Ãñ", "^": " ÃÆ", "√™": "«ùÃÆ", "√¢": "…êÃÆ", "√¥": "oÃÆ", "√ª": "nÃÆ", "√ä": "∆éÃÆ", "√Ç": "‚àÄÃÆ", "√î": "OÃÆ", "√õ": "‚à©ÃÆ" } }, mirror: { init: function () { for (i in this.map) this.map[this.map[i]] = i }, encode: function (i) { for (var r, t = [], o = [], h = 0, n = i.length; n > h; h++)r = i.charAt(h), h > 0 && ("Ãà" == r || "ÃÄ" == r || "ÃÅ" == r || "ÃÇ" == r) ? (r = this.map[i.charAt(h - 1) + r], t.pop()) : (r = this.map[r], "undefined" == typeof r && (r = i.charAt(h))), "\n" == r ? (o.push(t.reverse().join("")), t = []) : t.push(r); return o.push(t.reverse().join("")), o.join("\n") }, decode: function (i) { for (var r, t = [], o = [], h = 0, n = i.length; n > h; h++)r = i.charAt(h), h > 0 && ("Ãà" == r || "ÃÄ" == r || "ÃÅ" == r || "ÃÇ" == r) ? (r = this.map[i.charAt(h - 1) + r], t.pop()) : (r = this.map[r], "undefined" == typeof r && (r = i.charAt(h))), "\n" == r ? (o.push(t.reverse().join("")), t = []) : t.push(r); return o.push(t.reverse().join("")), o.join("\n") }, map: { a: "…í", b: "d", c: "…î", e: "…ò", f: "·é∏", g: "«´", h: " ú", j: "ÍûÅ", k: " û", l: "|", n: "·¥é", p: "q", r: "…ø", s: "ÍôÖ", t: "∆ö", y: " è", z: "∆π", B: "·ô†", C: "∆Ü", D: "·ó°", E: "∆é", F: "Íüª", G: "·éÆ", J: "·Ç±", K: "‚ãä", L: "‚ÖÉ", N: "Õ∂", P: "Íüº", Q: "·ªå", R: "–Ø", S: "ÍôÑ", Z: "∆∏", 1: "", 2: "", 3: "", 4: "", 5: "", 6: "", 7: "", "&": "", ";": "", "[": "]", "(": ")", "{": "}", "?": "‚∏Æ", "<": ">", "√§": "…íÃà", "√ü": "·ô†", "¬¥": "`", "√©": "…òÃÄ", "√°": "…íÃÄ", "√≥": "√≤", "√∫": "√π", "√â": "∆éÃÄ", "√Å": "√Ä", "√ì": "√í", "√ö": "√ô", "`": "¬¥", "√®": "…òÃÅ", "√†": "…íÃÅ", "√à": "∆éÃÅ", "√™": "…òÃÇ", "√¢": "…íÃÇ", "√ä": "∆éÃÇ", "√ò": "·¥ì", "√∏": "·¥ì" } }, creepify: { init: function () { for (var i = 768; 789 >= i; i++)this.diacriticsTop.push(String.fromCharCode(i)); for (var i = 790; 819 >= i; i++)794 != i && 795 != i && this.diacriticsBottom.push(String.fromCharCode(i)); this.diacriticsTop.push(String.fromCharCode(794)), this.diacriticsTop.push(String.fromCharCode(795)); for (var i = 820; 824 >= i; i++)this.diacriticsMiddle.push(String.fromCharCode(i)); for (var i = 825; 828 >= i; i++)this.diacriticsBottom.push(String.fromCharCode(i)); for (var i = 829; 836 >= i; i++)this.diacriticsTop.push(String.fromCharCode(i)); this.diacriticsTop.push(String.fromCharCode(836)), this.diacriticsBottom.push(String.fromCharCode(837)), this.diacriticsTop.push(String.fromCharCode(838)), this.diacriticsBottom.push(String.fromCharCode(839)), this.diacriticsBottom.push(String.fromCharCode(840)), this.diacriticsBottom.push(String.fromCharCode(841)), this.diacriticsTop.push(String.fromCharCode(842)), this.diacriticsTop.push(String.fromCharCode(843)), this.diacriticsTop.push(String.fromCharCode(844)), this.diacriticsBottom.push(String.fromCharCode(845)), this.diacriticsBottom.push(String.fromCharCode(846)), this.diacriticsTop.push(String.fromCharCode(848)), this.diacriticsTop.push(String.fromCharCode(849)), this.diacriticsTop.push(String.fromCharCode(850)), this.diacriticsBottom.push(String.fromCharCode(851)), this.diacriticsBottom.push(String.fromCharCode(852)), this.diacriticsBottom.push(String.fromCharCode(853)), this.diacriticsBottom.push(String.fromCharCode(854)), this.diacriticsTop.push(String.fromCharCode(855)), this.diacriticsTop.push(String.fromCharCode(856)), this.diacriticsBottom.push(String.fromCharCode(857)), this.diacriticsBottom.push(String.fromCharCode(858)), this.diacriticsTop.push(String.fromCharCode(859)), this.diacriticsBottom.push(String.fromCharCode(860)), this.diacriticsTop.push(String.fromCharCode(861)), this.diacriticsTop.push(String.fromCharCode(861)), this.diacriticsBottom.push(String.fromCharCode(863)), this.diacriticsTop.push(String.fromCharCode(864)), this.diacriticsTop.push(String.fromCharCode(865)) }, encode: function (r) { var t, o = ""; for (i in r) { if (t = r[i], this.options.middle && (t += this.diacriticsMiddle[Math.floor(Math.random() * this.diacriticsMiddle.length)]), this.options.top) for (var h = this.diacriticsTop.length - 1, n = 0, a = this.options.maxHeight - Math.random() * (this.options.randomization / 100 * this.options.maxHeight); a > n; n++)t += this.diacriticsTop[Math.floor(Math.random() * h)]; if (this.options.bottom) for (var s = this.diacriticsBottom.length - 1, n = 0, a = this.options.maxHeight - Math.random() * (this.options.randomization / 100 * this.options.maxHeight); a > n; n++)t += this.diacriticsBottom[Math.floor(Math.random() * s)]; o += t } return o }, decode: function (r) { var t, o = ""; for (i in r) t = r[i].charCodeAt(0), (768 > t || t > 865) && (o += r[i]); return o }, diacriticsTop: [], diacriticsMiddle: [], diacriticsBottom: [], options: { top: !0, middle: !0, bottom: !0, maxHeight: 15, randomization: 100 } }, bubbles: { init: function () { for (var i = 49; 57 >= i; i++)this.map[String.fromCharCode(i)] = String.fromCharCode(i + 9263); this.map[0] = "‚ì™"; for (var i = 65; 90 >= i; i++)this.map[String.fromCharCode(i)] = String.fromCharCode(i + 9333); for (var i = 97; 122 >= i; i++)this.map[String.fromCharCode(i)] = String.fromCharCode(i + 9327); for (i in this.map) this.mapInverse[this.map[i]] = i }, encode: function (r) { var t, o = "", h = !0; for (i in r) t = this.map[r[i]], "undefined" == typeof t && (r[i].charCodeAt(0) >= 33 ? (t = r[i] + String.fromCharCode(8413), h || (t = String.fromCharCode(8239) + String.fromCharCode(160) + String.fromCharCode(160) + String.fromCharCode(8239) + t)) : t = r[i]), o += t, h = "\n" == t; return o }, decode: function (r) { var t, o = "", h = ""; for (i in r) t = this.mapInverse[r[i]], o += "undefined" == typeof t ? r[i] : t; for (i in o) t = o[i].charCodeAt(0), 160 != t && 8239 != t && 8413 != t && (h += o[i]); return h }, map: {}, mapInverse: {} }, squares: { init: function () { }, encode: function (r) { var t, o = "", h = !0; for (i in r) r[i].charCodeAt(0) >= 33 ? (t = r[i] + String.fromCharCode(8414), h || (t = String.fromCharCode(8239) + String.fromCharCode(160) + String.fromCharCode(160) + String.fromCharCode(8239) + t)) : t = r[i], o += t, h = "\n" == t; return o }, decode: function (r) { var t, o = ""; for (i in r) t = r[i].charCodeAt(0), 160 != t && 8239 != t && 8414 != t && (o += r[i]); return o } }, roundsquares: { init: function () { }, encode: function (r) { var t, o = "", h = !0; for (i in r) r[i].charCodeAt(0) >= 33 ? (t = r[i] + String.fromCharCode(8419), h || (t = String.fromCharCode(160) + String.fromCharCode(160) + String.fromCharCode(160) + t)) : t = r[i], o += t, h = "\n" == t; return o }, decode: function (r) { var t, o = ""; for (i in r) t = r[i].charCodeAt(0), 160 != t && 8239 != t && 8419 != t && (o += r[i]); return o } }, bent: { init: function () { for (i in this.map) this.map[this.map[i]] = i }, encode: function (i) { for (var r, t = "", o = 0, h = i.length; h > o; o++)r = this.map[i.charAt(o)], "undefined" == typeof r && (r = i.charAt(o)), t += r; return t }, decode: function (i) { for (var r, t = "", o = 0, h = i.length; h > o; o++)r = this.map[i.charAt(o)], "undefined" == typeof r && (r = i.charAt(o)), t += r; return t }, map: { a: "ƒÖ", b: "“ç", c: "√ß", d: "’™", e: "“Ω", f: "∆í", g: "÷Å", h: "’∞", i: "√¨", j: " ù", k: "“ü", l: "”Ä", m: " ç", n: "’≤", o: "÷Ö", p: "÷Ñ", q: "’¶", r: "…æ", s: " Ç", t: "’ß", u: "’¥", v: "—µ", w: "’°", x: "√ó", y: "’æ", z: "’Ä", A: "»∫", B: "Œ≤", C: "‚Üª", D: "·é†", E: "∆ê", F: "∆ë", G: "∆ì", H: "«∂", I: "ƒØ", J: "ŸÑ", K: "“†", L: "Íùà", M: "‚±Æ", N: "·û†", O: "‡∂ß", P: "œÜ", Q: "“®", R: "‡Ω†", S: "œö", T: "Õ≤", U: "‘±", V: "·ªº", W: "‡∞ö", X: "·ÉØ", Y: "”ã", Z: "…Ä", 0: "‚äò", 1: "ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ", 2: "œ©", 3: "”†", 4: "‡•´", 5: "∆º", 6: "œ¨", 7: "7", 8: "ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ", 9: "‡•Ø", "&": "‚Öã", "(": "{", ")": "}", "{": "(", "}": ")", "√§": "ƒÖÃà", "√∂": "÷ÖÃà", "√º": "’¥Ãà", "√Ñ": "»∫Ãà", "√ñ": "‡∂ßÃà", "√ú": "‘±Ãà", "√©": "“ΩÃÅ", "√°": "ƒÖÃÅ", "√≥": "÷ÖÃÅ", "√∫": "’¥ÃÅ", "√â": "∆êÃÅ", "√Å": "»∫ÃÅ", "√ì": "‡∂ßÃÅ", "√ö": "‘±ÃÅ", "√®": "“ΩÃÄ", "√†": "ƒÖÃÄ", "√≤": "÷ÖÃÄ", "√π": "’¥ÃÄ", "√à": "∆êÃÄ", "√Ä": "»∫ÃÄ", "√í": "‡∂ßÃÄ", "√ô": "‘±ÃÄ", "√™": "“ΩÃÇ", "√¢": "ƒÖÃÇ", "√¥": "÷ÖÃÇ", "√ª": "’¥ÃÇ", "√ä": "∆êÃÇ", "√Ç": "»∫ÃÇ", "√î": "‡∂ßÃÇ", "√õ": "‘±ÃÇ" } }, tiny: { init: function () { for (i in this.map) this.map[this.map[i]] = i }, encode: function (i) { var r, t = ""; i = i.toUpperCase(); for (var o = 0, h = i.length; h > o; o++)r = this.map[i.charAt(o)], "undefined" == typeof r && (r = i.charAt(o)), t += r; return t }, decode: function (i) { for (var r, t = "", o = 0, h = i.length; h > o; o++)r = this.map[i.charAt(o)], "undefined" == typeof r && (r = i.charAt(o)), t += r; return t }, map: { A: "·¥Ä", B: " ô", C: "·¥Ñ", D: "·¥Ö", E: "·¥á", F: "Íú∞", G: "…¢", H: " ú", I: "…™", J: "·¥ä", K: "·¥ã", L: " ü", M: "·¥ç", N: "…¥", O: "·¥è", P: "·¥ò", Q: "Q", R: " Ä", S: "Íú±", T: "·¥õ", U: "·¥ú", V: "·¥†", W: "·¥°", X: "x", Y: " è", Z: "·¥¢" } } }; for (i in this.tools) this.tools[i].init(); this.getHTML = function (i) { for (var r, t = "", o = !0, h = 0, n = 0, a = 0, s = i.length; s > a; a++)r = i.charCodeAt(a), 10 == r || 13 == r ? (t += "<br>\n", o = !0) : 32 == r ? o ? (t += " ", o = !1) : (t += " ", o = !0) : (r >= 55296 && 56319 >= r ? (h = r, n = 0) : h > 0 ? (r >= 56320 && 57343 >= r && (n = 1024 * (h - 55296) + (r - 56320) + 65536), h = 0) : n = r, 0 != n && (t += "&#x" + n.toString(16) + ";", o = !0)); return t } }

function scriptify(text) {
  var map = { "0": "ùü¢", "1": "ùü£", "2": "ùü§", "3": "ùü•", "4": "ùü¶", "5": "ùüß", "6": "ùü®", "7": "ùü©", "8": "ùü™", "9": "ùü´", "a": "ùí∂", "b": "ùí∑", "c": "ùí∏", "d": "ùíπ", "e": "ùëí", "f": "ùíª", "g": "ùëî", "h": "ùíΩ", "i": "ùíæ", "j": "ùíø", "k": "ùìÄ", "l": "ùìÅ", "m": "ùìÇ", "n": "ùìÉ", "o": "ùëú", "p": "ùìÖ", "q": "ùìÜ", "r": "ùìá", "s": "ùìà", "t": "ùìâ", "u": "ùìä", "v": "ùìã", "w": "ùìå", "x": "ùìç", "y": "ùìé", "z": "ùìè", "A": "ùíú", "B": "ùêµ", "C": "ùíû", "D": "ùíü", "E": "ùê∏", "F": "ùêπ", "G": "ùí¢", "H": "ùêª", "I": "ùêº", "J": "ùí•", "K": "ùí¶", "L": "ùêø", "M": "ùëÄ", "N": "ùí©", "O": "ùí™", "P": "ùí´", "Q": "ùí¨", "R": "ùëÖ", "S": "ùíÆ", "T": "ùíØ", "U": "ùí∞", "V": "ùí±", "W": "ùí≤", "X": "ùí≥", "Y": "ùí¥", "Z": "ùíµ" };
  var charArray = text.split("");
  for (var i = 0; i < charArray.length; i++) {
    if (map[charArray[i].toLowerCase()]) {
      charArray[i] = map[charArray[i]];
    }
  }
  text = charArray.join("");
  return text;
}
function shuffleArray(array) {
  var currentIndex = array.length, temporaryValue, randomIndex;
  // While there remain elements to shuffle...
  while (0 !== currentIndex) {
    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;
    // And swap it with the current element.
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }
  return array;
}
function randomElement(a) {
  return a[Math.floor(Math.random() * a.length)];
}
//https://github.com/mathiasbynens/esrever
!function (e) { var o = "object" == typeof exports && exports, r = "object" == typeof module && module && module.exports == o && module, n = "object" == typeof global && global; (n.global === n || n.window === n) && (e = n); var t = /(<%= allExceptCombiningMarks %>)(<%= combiningMarks %>+)/g, i = /([\uD800-\uDBFF])([\uDC00-\uDFFF])/g, f = function (e) { e = e.replace(t, function (e, o, r) { return f(r) + o }).replace(i, "$2$1"); for (var o = "", r = e.length; r--;)o += e.charAt(r); return o }, l = { version: "<%= version %>", reverse: f }; if ("function" == typeof define && "object" == typeof define.amd && define.amd) define(function () { return l }); else if (o && !o.nodeType) if (r) r.exports = l; else for (var a in l) l.hasOwnProperty(a) && (o[a] = l[a]); else e.esrever = l }(this);

$(document).ready(function () {

  $("<style> // Font Generator by The Nitesh Arya: hackersaitand@gmail.com </style>").insertBefore("body");



  $("#fontSize").on("input change", function () {
    $("<style> .aryafonts p{font-size:" + $(this).val() + "px} </style>").insertBefore("body");

  });

 

  $('.Text').on("input", function (e) {
    var text = $('#Text').val();
    gen(text);
  });

  var url = window.location.href;
  var params = url.split('?=');
  urltext = params[1];
  if (urltext) {
    urltext = decodeURIComponent(urltext);
    $('#Text').val(urltext);
    gen(urltext);
  }


  $(document).on("click", ".aryafontslist .aryafonts", function () {

    $(".aryafontsrecentlist").prepend('<div class="aryafonts"><span>Recently Used</span><p onclick="copyit(this)" data-clipboard-target=".' + $(this).find("p").attr('class') + '" class="' + $(this).find("p").attr('class') + '">' + $(this).find("p").text() + '</p></div>');

    if ($('.aryafontsrecentlist .aryafonts').length > 3) {
      $('.aryafontsrecentlist .aryafonts').last().remove();
    }

  });


  function gen(text) {

    text = text.trim();

    $('.italicCharMap').html(applyCharMap(italicCharMap, text));
    $('.boldItalicCharMap').html(applyCharMap(boldItalicCharMap, text));
    
  };


  $(".clear").click(function () {
    $('#Text').val('');
  });

  $(".aryafonts p").click(function () {

    var $temp = $("<input>");
    $("body").append($temp);
    $temp.val($(this).text()).select();
    document.execCommand("copy");
    $temp.remove();
    $('body').append('<p class="copied"><input class="text" value="' + $(this).text() + '" /><span class="copybtn">‚úî Copied !</span></p>');
    setTimeout(function () { $('.copied').remove(); }, 1000);
  });
  
});